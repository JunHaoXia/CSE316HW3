{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jhxia\\\\Homeworks\\\\CSE316HW3\\\\client\\\\src\\\\components\\\\EditToolbar.js\",\n  _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport { GlobalStoreContext } from '../store';\nimport { useHistory } from 'react-router-dom';\n/*\r\n    This toolbar is a functional React component that\r\n    manages the undo/redo/close buttons.\r\n    \r\n    @author McKilla Gorilla\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditToolbar() {\n  _s();\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const history = useHistory();\n  let enabledButtonClass = \"playlister-button\";\n  function handleUndo() {\n    store.undo();\n  }\n  function handleRedo() {\n    store.redo();\n  }\n  function handleClose() {\n    history.push(\"/\");\n    store.closeCurrentList();\n  }\n  function handleAddSong() {\n    if (store.currentList) {\n      let song = {\n        \"title\": \"Untitled\",\n        \"artist\": \"Unknown\",\n        \"youTubeId\": \"dQw4w9WgXcQ\"\n      };\n      store.addSongTransaction(store.getPlaylistSize(), song);\n    }\n  }\n  let editStatus = false;\n  if (store.currentList) {\n    if (!store.hasModal) {\n      editStatus = true;\n      console.log(store.hasModal);\n      console.log(\"Inside editStatus = yes\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    id: \"edit-toolbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"add-song-button\",\n      disabled: !editStatus,\n      value: \"+\",\n      className: enabledButtonClass,\n      onClick: handleAddSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"undo-button\",\n      disabled: !editStatus,\n      value: \"\\u27F2\",\n      className: enabledButtonClass,\n      onClick: handleUndo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"redo-button\",\n      disabled: !editStatus,\n      value: \"\\u27F3\",\n      className: enabledButtonClass,\n      onClick: handleRedo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"close-button\",\n      disabled: !editStatus,\n      value: \"\\u2715\",\n      className: enabledButtonClass,\n      onClick: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(EditToolbar, \"3pru+SYrs14w+1LSVfrX0yDmdFE=\", false, function () {\n  return [useHistory];\n});\n_c = EditToolbar;\nexport default EditToolbar;\nvar _c;\n$RefreshReg$(_c, \"EditToolbar\");","map":{"version":3,"names":["useContext","GlobalStoreContext","useHistory","EditToolbar","store","history","enabledButtonClass","handleUndo","undo","handleRedo","redo","handleClose","push","closeCurrentList","handleAddSong","currentList","song","addSongTransaction","getPlaylistSize","editStatus","hasModal","console","log"],"sources":["C:/Users/jhxia/Homeworks/CSE316HW3/client/src/components/EditToolbar.js"],"sourcesContent":["import { useContext } from 'react'\r\nimport { GlobalStoreContext } from '../store'\r\nimport { useHistory } from 'react-router-dom'\r\n/*\r\n    This toolbar is a functional React component that\r\n    manages the undo/redo/close buttons.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nfunction EditToolbar() {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const history = useHistory();\r\n\r\n    let enabledButtonClass = \"playlister-button\";\r\n\r\n    function handleUndo() {\r\n        store.undo();\r\n    }\r\n    function handleRedo() {\r\n        store.redo();\r\n    }\r\n    function handleClose() {\r\n        history.push(\"/\");\r\n        store.closeCurrentList();\r\n    }\r\n    function handleAddSong() {\r\n        if(store.currentList){\r\n            let song = {\r\n                \"title\": \"Untitled\",\r\n                \"artist\": \"Unknown\",\r\n                \"youTubeId\": \"dQw4w9WgXcQ\"\r\n            }\r\n            store.addSongTransaction(store.getPlaylistSize(), song);\r\n        }\r\n    }\r\n    let editStatus = false;\r\n    if (store.currentList) {\r\n        if(!(store.hasModal)){\r\n            editStatus = true;\r\n            console.log(store.hasModal);\r\n            console.log(\"Inside editStatus = yes\")\r\n        }\r\n    }\r\n    return (\r\n        <span id=\"edit-toolbar\">\r\n            <input\r\n                type=\"button\"\r\n                id='add-song-button'\r\n                disabled={!editStatus}\r\n                value=\"+\"\r\n                className={enabledButtonClass}\r\n                onClick={handleAddSong}\r\n            />\r\n            <input\r\n                type=\"button\"\r\n                id='undo-button'\r\n                disabled={!editStatus}\r\n                value=\"⟲\"\r\n                className={enabledButtonClass}\r\n                onClick={handleUndo}\r\n            />\r\n            <input\r\n                type=\"button\"\r\n                id='redo-button'\r\n                disabled={!editStatus}\r\n                value=\"⟳\"\r\n                className={enabledButtonClass}\r\n                onClick={handleRedo}\r\n            />\r\n            <input\r\n                type=\"button\"\r\n                id='close-button'\r\n                disabled={!editStatus}\r\n                value=\"&#x2715;\"\r\n                className={enabledButtonClass}\r\n                onClick={handleClose}\r\n            />\r\n        </span>);\r\n}\r\n\r\nexport default EditToolbar;"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,kBAAkB,QAAQ,UAAU;AAC7C,SAASC,UAAU,QAAQ,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AALA;AAMA,SAASC,WAAW,GAAG;EAAA;EACnB,MAAM;IAAEC;EAAM,CAAC,GAAGJ,UAAU,CAACC,kBAAkB,CAAC;EAChD,MAAMI,OAAO,GAAGH,UAAU,EAAE;EAE5B,IAAII,kBAAkB,GAAG,mBAAmB;EAE5C,SAASC,UAAU,GAAG;IAClBH,KAAK,CAACI,IAAI,EAAE;EAChB;EACA,SAASC,UAAU,GAAG;IAClBL,KAAK,CAACM,IAAI,EAAE;EAChB;EACA,SAASC,WAAW,GAAG;IACnBN,OAAO,CAACO,IAAI,CAAC,GAAG,CAAC;IACjBR,KAAK,CAACS,gBAAgB,EAAE;EAC5B;EACA,SAASC,aAAa,GAAG;IACrB,IAAGV,KAAK,CAACW,WAAW,EAAC;MACjB,IAAIC,IAAI,GAAG;QACP,OAAO,EAAE,UAAU;QACnB,QAAQ,EAAE,SAAS;QACnB,WAAW,EAAE;MACjB,CAAC;MACDZ,KAAK,CAACa,kBAAkB,CAACb,KAAK,CAACc,eAAe,EAAE,EAAEF,IAAI,CAAC;IAC3D;EACJ;EACA,IAAIG,UAAU,GAAG,KAAK;EACtB,IAAIf,KAAK,CAACW,WAAW,EAAE;IACnB,IAAG,CAAEX,KAAK,CAACgB,QAAS,EAAC;MACjBD,UAAU,GAAG,IAAI;MACjBE,OAAO,CAACC,GAAG,CAAClB,KAAK,CAACgB,QAAQ,CAAC;MAC3BC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IAC1C;EACJ;EACA,oBACI;IAAM,EAAE,EAAC,cAAc;IAAA,wBACnB;MACI,IAAI,EAAC,QAAQ;MACb,EAAE,EAAC,iBAAiB;MACpB,QAAQ,EAAE,CAACH,UAAW;MACtB,KAAK,EAAC,GAAG;MACT,SAAS,EAAEb,kBAAmB;MAC9B,OAAO,EAAEQ;IAAc;MAAA;MAAA;MAAA;IAAA,QACzB,eACF;MACI,IAAI,EAAC,QAAQ;MACb,EAAE,EAAC,aAAa;MAChB,QAAQ,EAAE,CAACK,UAAW;MACtB,KAAK,EAAC,QAAG;MACT,SAAS,EAAEb,kBAAmB;MAC9B,OAAO,EAAEC;IAAW;MAAA;MAAA;MAAA;IAAA,QACtB,eACF;MACI,IAAI,EAAC,QAAQ;MACb,EAAE,EAAC,aAAa;MAChB,QAAQ,EAAE,CAACY,UAAW;MACtB,KAAK,EAAC,QAAG;MACT,SAAS,EAAEb,kBAAmB;MAC9B,OAAO,EAAEG;IAAW;MAAA;MAAA;MAAA;IAAA,QACtB,eACF;MACI,IAAI,EAAC,QAAQ;MACb,EAAE,EAAC,cAAc;MACjB,QAAQ,EAAE,CAACU,UAAW;MACtB,KAAK,EAAC,QAAU;MAChB,SAAS,EAAEb,kBAAmB;MAC9B,OAAO,EAAEK;IAAY;MAAA;MAAA;MAAA;IAAA,QACvB;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AACf;AAAC,GArEQR,WAAW;EAAA,QAEAD,UAAU;AAAA;AAAA,KAFrBC,WAAW;AAuEpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}